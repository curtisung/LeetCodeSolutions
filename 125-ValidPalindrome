class Solution(object):
    def isPalindrome(self, s):
        """
        :type s: str
        :rtype: bool
        So what is a palindrome: 
            convert all uppercase to lowercase and remove all non-alphanumeric chars
            must be reflectively symmetrical
        Return true if so, else false 

        First, remove all non letters and numbers
        then make sure comparisons are tolower if they are alphabet

        two pointer problem, beginning from either side of string and moving to center.
        
        While p1 < p2:
            break and return false if two opposite chars are not equal
        return true

        PS:

            p1 = 0
            p2 = s.length - 1
            For each pass, figure out if p1 char is valid. 
                if not, inc and re-eval while condition
            Then, do the same for p2 char to reach valid char
            Once you have valid chars, compare.
            if not same, return false
            else, inc and dec
            
            while p1 < p2:
                ...
                increment p1 until reaching alphanumeric char 
                increment p2 until reach alphanum 
                compare p1 and p2
                if p2 < p1:
                    break
                if p1 != p2
                    return false

            return True

        """
        p1 = 0
        p2 = len(s)-1

        while p1 <= p2:
            if not s[p1].isalnum():
                p1 += 1
            elif not s[p2].isalnum():
                p2 -= 1
            else:
                if s[p1].lower() != s[p2].lower():
                    return False
                p1 += 1
                p2 -= 1

        return True
